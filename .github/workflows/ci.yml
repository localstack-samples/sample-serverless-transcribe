name: Deploy on LocalStack 

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # “At 00:00 on Sunday.”
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  serverless:
    name: Setup infrastructure using Serverless Framework
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: |
          make install

      - name: Start LocalStack
        env:
          LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
          DNS_ADDRESS: 0
        run: |
          docker pull localstack/localstack-pro:latest
          # Start LocalStack in the background
          LS_LOG=trace localstack start -d
          # Wait 30 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          localstack wait -t 15
          echo "Startup complete"

      - name: Run the application
        run: |
          make deploy
          
      - name: curl endpoint
        run: |
          rest_api=$(awslocal apigateway get-rest-apis | jq -r '.items[0].id')
          url="https://${rest_api}.execute-api.localhost.localstack.cloud:4566/local/upload"
          echo "curling $url ..."
          result=$(curl $url)
          if [[ "$result" != *"<h1>AWS Transcribe Example</h1>"* ]]; then
            echo "unexpected response"
            echo $result
            exit 1
          fi

      - name: Send a Slack notification
        if: failure() || github.event_name != 'pull_request'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{run_url}|View Workflow run>"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Generate a Diagnostic Report
        if: failure()
        run: |
          curl -s localhost:4566/_localstack/diagnose | gzip -cf > diagnose.json.gz

      - name: Upload the Diagnostic Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: diagnose.json.gz
          path: ./diagnose.json.gz
